{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../src/npm.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * some utilities for interfacing with npm in the `tap plugin` command\n */\n\nimport { LoadedConfig } from '@tapjs/config'\nimport { foregroundChild } from 'foreground-child'\nimport { mkdirp } from 'mkdirp'\nimport { spawnSync } from 'node:child_process'\nimport { resolve } from 'node:path'\n\nconst npmFreeEnv = Object.fromEntries(\n  Object.entries(process.env).filter(([k]) => !/^npm_/i.test(k)),\n)\n\nlet npmCwd: string | undefined = undefined\nexport const npmFindCwd = async (projectRoot: string): Promise<string> => {\n  if (!npmCwd) {\n    npmCwd = resolve(projectRoot, '.tap/plugins')\n    await mkdirp(npmCwd)\n  }\n  return npmCwd\n}\n\n/**\n * Run an npm command in the background, returning the result\n */\nexport const npmBg = (args: string[], npmCwd: string) => {\n  return spawnSync('npm', args, {\n    env: {\n      ...npmFreeEnv,\n      npm_config_prefix: npmCwd,\n    },\n    encoding: 'utf8',\n    cwd: npmCwd,\n    shell: true,\n  })\n}\n\n/**\n * Run an npm command in the foreground\n */\nconst npmFg = (\n  args: string[],\n  npmCwd: string,\n  cb: (\n    code: number | null,\n    signal: NodeJS.Signals | null,\n  ) =>\n    | number\n    | false\n    | void\n    | NodeJS.Signals\n    | Promise<number | false | void | NodeJS.Signals | undefined>\n    | undefined,\n) => {\n  return foregroundChild(\n    'npm',\n    args,\n    {\n      env: {\n        ...npmFreeEnv,\n        npm_config_prefix: npmCwd,\n      },\n      cwd: npmCwd,\n      shell: true,\n    },\n    cb,\n  )\n}\n\n// suppress all non-essential npm output\nconst quiet = ['--no-audit', '--loglevel=error', '--no-progress']\n\nexport const install = async (\n  pkgs: string[],\n  config: LoadedConfig,\n) => {\n  const npmCwd = await npmFindCwd(config.projectRoot)\n  const args = ['install', ...quiet, '--save-dev', ...pkgs]\n  await new Promise<void>((res, rej) => {\n    npmFg(args, npmCwd, (code, signal) => {\n      // allow error exit to proceed\n      if (code || signal) {\n        rej(\n          Object.assign(new Error('install failed'), {\n            code,\n            signal,\n          }),\n        )\n        return\n      }\n      res()\n      // do not exit\n      return false\n    })\n  })\n}\n\nexport const uninstall = async (\n  pkgs: string[],\n  config: LoadedConfig,\n) => {\n  const args = ['rm', ...quiet, ...pkgs]\n  const npmCwd = await npmFindCwd(config.projectRoot)\n  await new Promise<void>(res =>\n    npmFg(args, npmCwd, (code, signal) => {\n      // allow error exit to proceed\n      res()\n      return code || signal ? undefined : false\n    }),\n  )\n}\n"]}