"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = exports.Chdir = void 0;
const core_1 = require("@tapjs/core");
/**
 * Implementation class providing the {@link @tapjs/intercept!Chdir#chdir}
 * method
 */
class Chdir {
    #t;
    #didOnEOF = false;
    constructor(t) {
        this.#t = t;
    }
    /**
     * Change the working directory, for the context of a single test.
     */
    chdir(dir) {
        if (!this.#didOnEOF) {
            /* c8 ignore next - very rarely relevant */
            const back = core_1.proc?.cwd?.() || core_1.cwd;
            this.#didOnEOF = true;
            const { onEOF } = this.#t;
            this.#t.onEOF = async () => {
                this.#t.onEOF = onEOF;
                // get out of the dir before anything else, in case
                // someone wants to delete it.
                core_1.proc?.chdir?.(back);
                await onEOF();
            };
        }
        core_1.proc?.chdir?.(dir);
    }
}
exports.Chdir = Chdir;
/**
 * plugin method that instantiates an {@link @tapjs/chdir!Chdir}
 */
const plugin = t => new Chdir(t);
exports.plugin = plugin;
//# sourceMappingURL=index.js.map