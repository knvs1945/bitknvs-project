{"version":3,"file":"result-details.js","sourceRoot":"","sources":["../../src/result-details.tsx"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport { Box, Text } from 'ink'\nimport React, { FC } from 'react'\nimport { Result } from 'tap-parser'\nimport { stringify } from 'tap-yaml'\nimport { same } from 'tcompare'\nimport { Diff } from './diff.js'\nimport { Source } from './source.js'\nimport { Stack } from './stack.js'\n\nexport const ResultDetails: FC<{\n  result: Result\n  seen?: unknown[]\n  heading?: string\n  flush?: boolean\n}> = ({ result, seen = [], heading, flush }) => {\n  if (!result.diag || typeof result.diag !== 'object') return <></>\n  const {\n    test,\n    stack,\n    at,\n    source,\n    location,\n    cause,\n    error,\n    errors,\n    code,\n    errorOrigin,\n    message,\n    ...otherDiags\n  } = result.diag\n\n  if (\n    'expected' in otherDiags &&\n    'actual' in otherDiags &&\n    !('found' in otherDiags) &&\n    !('wanted' in otherDiags)\n  ) {\n    otherDiags.found = otherDiags.actual\n    otherDiags.wanted = otherDiags.expected\n    delete otherDiags.actual\n    delete otherDiags.expected\n  }\n\n  if (\n    'found' in otherDiags &&\n    'wanted' in otherDiags &&\n    !('diff' in otherDiags)\n  ) {\n    const { diff } = same(otherDiags.found, otherDiags.wanted)\n    otherDiags.diff = diff\n  }\n\n  // if we have a diff, don't show found/wanted, as it is frequently huge.\n  if (otherDiags.diff?.trimEnd()) {\n    delete otherDiags.found\n    delete otherDiags.wanted\n  }\n  const { diff } = otherDiags\n  delete otherDiags.diff\n\n  return (\n    <Box paddingLeft={!!heading ? 0 : 4} flexDirection=\"column\">\n      {heading ?\n        <Box flexDirection=\"column\" paddingTop={flush ? 0 : 1}>\n          <Text color=\"white\" bold>\n            {heading}\n          </Text>\n        </Box>\n      : <></>}\n      <Source\n        stack={stack}\n        location={location}\n        at={at}\n        source={source}\n        errorOrigin={errorOrigin}\n      />\n      <Diff diff={diff} />\n      {error ?\n        <Text>\n          {stringify({ error })\n            .trimEnd()\n            .replace(/^error:([^\\n]*\\n)?/, chalk.dim('error:$1'))}\n        </Text>\n      : <></>}\n      {code ?\n        <Text>\n          {stringify({ code })\n            .trimEnd()\n            .replace(/^code:([^\\n]*\\n)?/, chalk.dim('code:$1'))}\n        </Text>\n      : <></>}\n      {!!Object.keys(otherDiags).length && (\n        <Text dimColor>{stringify(otherDiags).trimEnd()}</Text>\n      )}\n      <Stack stack={stack} />\n      {cause !== undefined &&\n        (!!cause && typeof cause === 'object' ?\n          /* c8 ignore start - exceedingly unlikely */\n          seen.includes(cause) ?\n            '(circular)'\n          : /* c8 ignore stop */\n            <ResultDetails\n              heading={`cause: ${\n                typeof cause.message === 'string' ?\n                  `${typeof cause.type === 'string' ? cause.type : 'Error'}: ${cause.message}`\n                : ''\n              }`}\n              flush={false}\n              result={{\n                ...result,\n                diag: cause,\n              }}\n              seen={seen.concat(cause)}\n            />\n        : <Box paddingTop={1}>\n            <Text>\n              {chalk.white.bold('cause: ')}\n              {chalk.dim(stringify(cause).trimEnd())}\n            </Text>\n          </Box>)}\n      {(\n        errors !== undefined && Array.isArray(errors) && errors.length\n      ) ?\n        [\n          <Box flexDirection=\"column\" key={-1} paddingTop={1}>\n            <Text color=\"white\" bold>\n              errors: [\n            </Text>\n          </Box>,\n          ...errors.map((e, i) => (\n            <Box\n              key={i}\n              flexDirection=\"row\"\n              paddingLeft={2}\n              paddingTop={+!!i}>\n              <Text color=\"white\" bold>\n                {`- `}\n              </Text>\n              {!!e && typeof e === 'object' ?\n                <ResultDetails\n                  flush\n                  result={{\n                    ...result,\n                    diag: e,\n                  }}\n                  heading={`${\n                    typeof e.message === 'string' ?\n                      `${typeof e.type === 'string' ? e.type : 'Error'}: ${e.message}`\n                    : ''\n                  }`}\n                  seen={seen.concat(e)}\n                />\n              : <Text dimColor>{stringify(e).trimEnd()}</Text>}\n            </Box>\n          )),\n          <Box flexDirection=\"column\" key={errors.length}>\n            <Text color=\"white\" bold>\n              ]\n            </Text>\n          </Box>,\n        ]\n      : <></>}\n    </Box>\n  )\n}\n"]}