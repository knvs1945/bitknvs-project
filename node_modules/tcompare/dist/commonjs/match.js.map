{"version":3,"file":"match.js","sourceRoot":"","sources":["../../src/match.ts"],"names":[],"mappings":"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","sourcesContent":["import { Format } from './format.js'\nimport { Has } from './has.js'\n\n/**\n * The loosed and most flexibly magical matching strategy.\n *\n * - If the objects pass the {@link tcompare!has.Has} test, then return true.\n * - If the pattern is a regular expression, then test it against the\n *   string form of the test value.\n * - If the pattern is a string, and the test value is a string, then test\n *   that the pattern appears somewhere in the test value.\n * - If the pattern is a string, and the test value is a Date, then test\n *   parse the pattern as a Date and verify that they have the same value\n * - If the pattern is a constructor, then test that the value is an\n *   instance of the constructor. In the case of scalar constructors, like\n *   Number, Boolean, etc, also pass if the `typeof` the value matches.\n *   That is `Match(1, { expect: Number })` passes.\n * - If the pattern is the `Array` constructor, then pass for any iterable\n *   valuef.\n */\n\nexport class Match extends Has {\n  test(): boolean | 'COMPLEX' {\n    const obj = this.object\n    const pattern = this.expect\n\n    return (\n      super.test() === true ? true\n        // failures that would also fail in the super class\n        // but if they didn't pass, then should fail here, too\n      : pattern == null || obj == null ? false\n      : pattern instanceof RegExp && obj instanceof RegExp ? false\n      : Buffer.isBuffer(obj) && Buffer.isBuffer(pattern) ? false\n      : typeof pattern === 'symbol' ? false\n        // ok, Match-specific stuff\n      : pattern instanceof RegExp ? pattern.test('' + obj)\n      : (\n        typeof obj === 'string' &&\n        typeof pattern === 'string' &&\n        pattern\n      ) ?\n        obj.indexOf(pattern) !== -1\n      : obj instanceof Date && typeof pattern === 'string' ?\n        obj.getTime() === new Date(pattern).getTime()\n      : pattern === BigInt ? typeof obj === 'bigint'\n      : pattern === Buffer ? Buffer.isBuffer(obj)\n      : pattern === Function ? typeof obj === 'function'\n      : pattern === Number ?\n        typeof obj === 'number' && obj === obj && isFinite(obj)\n      : pattern === String ? typeof obj === 'string'\n      : pattern === Symbol ? typeof obj === 'symbol'\n      : pattern === Boolean ? typeof obj === 'boolean'\n      : pattern === Map ? this.isMap()\n      : pattern === Set ? this.isSet()\n      : pattern === Object ? obj && typeof obj === 'object'\n      : pattern === Array ? new Format(obj).isArray()\n      : !this.isError() && pattern instanceof Error ? false\n      : (\n        this.isError() &&\n        ((pattern.message &&\n          !new Match(obj.message, {\n            expect: pattern.message,\n          }).test()) ||\n          (pattern.name &&\n            !new Match(obj.name, {\n              expect: pattern.name,\n            }).test()))\n      ) ?\n        false\n        // standard deep matching stuff, same as parent, but not simple.\n      : this.isSet() && !(pattern instanceof Set) ? false\n      : this.isMap() && !(pattern instanceof Map) ? false\n      : typeof pattern === 'function' && typeof obj === 'object' ?\n        obj instanceof pattern\n      : typeof obj !== 'object' || typeof pattern !== 'object' ? false\n      : 'COMPLEX'\n    )\n  }\n}\n"]}