{
	"projects_bitknvs_home": {
		"description": "<p>Bitknvs serves as my personal portfolio website showcasing my journey as a software developer and the projects I've created. I'm a fan of both high-contrast, 90's cyberpunk-style media like Ghost in the Shell, Cowboy Bebop, and the Matrix, and retro pixel-based artistry. To that end, I designed Bitknvs based on these themes as a reminder to my younger years while also presenting my experience as a full-stack developer. Though, I'd rather be modest and say the frontend can be better - I prefer working with backend most of the time. Also, frontend stuff just makes me more indecisive - there are just so many things you can improve when designing pages</p><p> This site was written mainly using Node.js + ExpressJS, Bootstrap and Threejs, with the frontend mostly dependent on bootstrap and jquery so it remains as a dynamic single-page site. While it's completely possible to actually use React or Angular, I preferred to just use Bootstrap to reduce complexity and make sure I actually finished the project. And since it's a personal portfolio site, I didn't want to overthink user experience and rather just made sure the site is actually working for you. </p><p> The revolving menu and site background was compiled using Threejs and vite, with the revolving menu based on my project \"Widget Spinner\", an entirely separate project that you may also find in the projects page. I've always been enticed with how some websites and showcase pages use 3D elements in their presentation, and when I learned how this was achievable using threejs, I set out to make it a part of my repertoire. At least, if I was going to have at least one frontend skill, let it be threejs.</p><p>With that said, please enjoy exploring Bitknvs.com. You can contact me through the links in my \"About Me\" section.</p>"
	},

	"projects_mytemize": {
		"description": "<p>Mytemize Listbuilder is a month-long project (well, month and some weeks) I wrote to sharpen my rusting experience with C#. The last time I professionally used it before I embarked on this project, I was still fresh out of University and into my first software engineering job, where we actively used C++ and .Net for software and firmware-related projects. Those were the years I was exposed to the Windows GUI library, and as amazing and powerful the C++ is, it was a nightmare building Windows apps with it on its own. You'd have to be Terry Davis, or at least someone with his kind of memory, to write up a decent looking windows program (props to all developers before our generation).</p><p> And then, I discovered C# and how it made life so much simpler... well at least for building Windows apps anyway.</p><p>So like most upbeat fresh grads software developer who just discovered a program language they love, I ended up writing a lot of weird small programs with C#, all of which already got lost in time. But I fostered my appreciation for C# that way.</p><p>Fast tracking to 2023 where I got back into an actual development role after years of being an online advertising support engineer, I decided to revisit C# .net again, but with a proper project this time. I needed to write something simple but useful, and something that won't take over months of effort since it's basically a hobby project. I ended up with well, the simplest idea which is a to-do list, but hey it's better to have a simple, finished project than a fancy, complicated one that ends up with scope creep over time</p><p>And so, Mytemize came to be - a fully-working to-do list written in C# .net that's not just a notepad or sticky note with lists you write on the fly. It actually has checkboxes that light up when you tick them as done or untick them as un-done, and it can go into yellow or red alert if that entry is reaching or past its deadline. That's right, your to-do list CAN have deadlines, just so you feel the pressure of getting it done. And you can make as many of them as you want, you can then \"pin\" them so they're... just like sticky notes. But not just any kind of pin, if you don't wanna dirty your desktop with a lot of them. You can keep them on a \"record\" via the Mytemize List Tracker, and it'll be tucked neatly into a separate program at the corner of your start menu tray. The only downside to it is that it's only available for Windows with .Net installed.</p>"
	},

	"projects_fourtres": {
		"description": "<p>In the advent of AI and Machine Learning, there was only one way to keep up with technology and that was to upskill along with it. However, this actually got me interested in learning <i>more</i> about AI and Machine Learning. And to do that, I needed to learn about one of the best languages to start with Machine Learning: Python.</p><p>Fourtres, which is a pun on Fortress, is a culmination of over a month's worth of learning the ways of Python and TKinter (and yes, I mix up adding semi-colons as line terminators as a standard now).</p><p>Quick review - Python is amazing, its syntax is easy to remember and it has a smooth learning curve, perfect for beginners. I now understand why most Devs suggest Python as the best entry point to Software Engineering.</p><p>Written in Python with Fourtres PK is a password generator and keeper program written in Python that lets you keep records for user accounts from various Websites and other services that well, just needs a Username and Password. Just add a website, username, and password, click \"Add Record\", and it'll store it onto a store file. You can pull it back up using the search button, and as long as a record is available for a website, it will provide a dropdown list of all users you have for that website.</p><p>It also has a password generator so you don't have to constantly keep making up one, or at least be predictable about it. It lets you choose between different modes of password generation, each with their own options you can set up. It even has four 3-digit segment displays (Four Tres', get it?) that roll random numbers during password generation just so you can also choose to include some sort of pin code. No more predictable passwords or forgetting users with Fourtres around.</p><p>Fourtres is also compiled using Nuitka, a Python encoder package that lets devs create pseudo-executables for their Python programs. The beauty of Nuitka is that it has a standalone option, which means users who download the program, do not need to install Python to use it. Such convenience is really just a fragment of Python's versatility.</p>"
	},

	"projects_widget_spinner": {
		"description": "<p>I am simply fascinated by the concept of using 3D graphic elements in Webpages that don't rely on playing videos or GIFs. The idea of seeing such elements incorporated into a webpage that is normally dependent on flat & linear concepts such as divs was a mystifying idea to me back then. Now while looking up real-estate portfolio sites, I stumbled onto ThreeJS, a JavaScript package that makes developing 3D elements more user-friendly, and well it demystified all of that. But beyond demystification, was the curiosity and wonder of thinking if I'd be able to learn that. And, so I did, with Widget Spinner. </p><p>Widget Spinner is a small ThreeJS library I wrote that lets users create interactive menus on their own webpages. While it does require compiling as it is still ultimately a Threejs project, it makes setting up the interactive menu behavior simpler than just writing it yourself. The menu elements are Threejs reliant, so you can design them any way you want, and have its respective action can be connected to a client-side script that will do whatever you need on the page. With Widget Spinner, I'm now able to turn my webpage into a basic smart TV menu of sorts. Don't believe me? Go ahead and check out the demo page for yourself.</p>"
	},

	"projects_candlesnap": {
		"description": ""
	},

	"projects_spykeball": {
		"description": ""
	},

	"projects_lone_bard": {
		"description": ""
	}
}
